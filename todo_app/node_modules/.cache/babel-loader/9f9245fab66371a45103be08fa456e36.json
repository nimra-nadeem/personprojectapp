{"ast":null,"code":"var _jsxFileName = \"/Users/Nimra/Documents/random_projects/my-app/src/components/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Item from './Item';\nimport todoData from './todoData';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: todoData\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(id) {\n    console.log(\"Changed\", id);\n    this.setState(prevState => {\n      const newTodos = prevState.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      });\n      return {\n        todos: updatedTodos\n      };\n    });\n  }\n\n  render() {\n    const todoItems = this.state.todos.map(item => /*#__PURE__*/React.createElement(Item, {\n      key: item.id,\n      item: item,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 52\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, todoItems), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Nimra/Documents/random_projects/my-app/src/components/App.js"],"names":["React","Header","Footer","Item","todoData","App","Component","constructor","state","todos","handleChange","bind","id","console","log","setState","prevState","newTodos","map","todo","completed","updatedTodos","render","todoItems","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEL;AADI,KAAb;AAGA,SAAKM,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,EAAD,EAAK;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,EAAvB;AACA,SAAKG,QAAL,CAAcC,SAAS,IAAI;AACzB,YAAMC,QAAQ,GAAGD,SAAS,CAACP,KAAV,CAAgBS,GAAhB,CAAoBC,IAAI,IAAI;AAC3C,YAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB,EAAoB;AAClBO,UAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACD;;AACD,eAAOD,IAAP;AACD,OALgB,CAAjB;AAMA,aAAO;AACLV,QAAAA,KAAK,EAAEY;AADF,OAAP;AAGD,KAVD;AAWD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAKf,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAqBM,IAAI,iBAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACZ,EAAhB;AAAoB,MAAA,IAAI,EAAEY,IAA1B;AAAgC,MAAA,YAAY,EAAE,KAAKd,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CAAlB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGa,SADH,CAFF,eAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAnC+B;;AAuClC,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Header from './Header'\nimport Footer from './Footer'\nimport Item from './Item';\nimport todoData from './todoData'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: todoData\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(id) {\n    console.log(\"Changed\", id)\n    this.setState(prevState => {\n      const newTodos = prevState.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo\n      })\n      return {\n        todos: updatedTodos\n      }\n    })\n  }\n\n  render() {\n    const todoItems = this.state.todos.map(item => <Item key={item.id} item={item} handleChange={this.handleChange}/>)\n    return (\n      <div className=\"App\">\n        <Header />\n        <div>\n          {todoItems}\n        </div>        \n        <Footer />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}